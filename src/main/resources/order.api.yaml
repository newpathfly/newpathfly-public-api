openapi: 3.0.3
info:
  title: Flight Order API
  version: 2.1.0
  description: |
    (TODO)
  contact:
    name: newpathfly

servers:
  - url: http://uat-api.newpathfly.com/v1/order
  - url: http://api.newpathfly.com/v1/order

tags:
  - name: Order

paths:
  /orders:
    post:
      description: |
        (TODO)
      operationId: createOrder
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          $ref: "#/components/responses/Order"
        "400":
          $ref: "#/components/responses/BadRequest"

  /orders/{orderId}:
    get:
      description: |
        (TODO)
      operationId: getOrder
      tags:
        - Order
      parameters:
        - $ref: "#/components/parameters/OrderId"
      responses:
        "200":
          $ref: "#/components/responses/Order"

components:
  parameters:
    OrderId:
      name: orderId
      in: path
      required: true
      schema:
        type: string
        readOnly: true
        description: |
          (TODO)
        example: a7dd1cf6-dc96-490b-bdf6-8685dbf5bb87

  responses:
    Order:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Order"

    BadRequest:
      description: Bad Request
      content:
        text/plain:
          example: "Bad order request: (specific error message here)"

  schemas:
    # Order
    Order:
      description: |
        (TODO)
      required:
        - trip
        - customer
        - passengers
      properties:
        orderId:
          type: string
          readOnly: true
          description: |
            (TODO)
          example: a7dd1cf6-dc96-490b-bdf6-8685dbf5bb87
        currency:
          type: string
          readOnly: true
          example: EUR
        totalAmount:
          type: number
          readOnly: true
          example: 456.78
        flights:
          description: A one-way trip consists of one flight. A round-trip consists of two flights going forth and back between two places.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Flight"
        customer:
          $ref: "#/components/schemas/Customer"
        passengers:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Passenger"

    Customer:
      allOf:
        - $ref: "#/components/schemas/Person"
        - properties:
            phoneCountryCode:
              type: string
              example: "+1"
            phoneNumber:
              type: string
              example: "1234567890"
            email:
              type: string
              example: "peter_parker@yahoo.com"

    Passenger:
      allOf:
        - $ref: "#/components/schemas/Person"
        - properties:
            type:
              type: string
              enum:
                - ADT
                - CHD
                - INF
            birthday:
              type: string
              format: date
              example: "2001-01-01"
            gender:
              type: string
              enum:
                - M
                - F
            travelDocument:
              $ref: "#/components/schemas/TravelDocument"

    Person:
      description: |
        (TODO)
      properties:
        firstName:
          type: string
          example: Peter
        lastName:
          type: string
          example: Parker

    TravelDocument:
      description: |
        (TODO)
      properties:
        type:
          description: |
            (TODO)
          type: string
          default: PASSPORT
          enum:
            - DRIVER_LICENSE
            - NATIONAL_ID
            - PASSPORT
        number:
          type: string
          description: |
            (TODO)
          example: EG12345678
        expiryDate:
          type: string
          format: date
        placeOfIssue:
          type: string
          example: USA

    Flight:
      description: A flight is a pair of original departure to final destination.
      properties:
        segments:
          description: A flight consists of one or more segments. For example, a direct flight from Toronto (YYZ) to London (LON) is a flight consists of exactly one flight segment.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Segment"

    Segment:
      description: A segment is a pair of departure and arrival without any stop in-between.
      properties:
        fareClass:
          $ref: "#/components/schemas/FareClass"
        depDate:
          description: This is the departure date in `YYYYMMDD` format.
          type: string
          pattern: '^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$'
          example: "20210401"
        depTime:
          description: This is the departure time in `HH:mm` format.
          type: string
          pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
          example: "12:45"
        depAirport:
          description: This is the departure airport specified using its IATA code.
          type: string
          minLength: 3
          maxLength: 3
          example: LON
        arrDate:
          description: This is the arrival date in `YYYYMMDD` format.
          type: string
          pattern: '^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$'
          example: "20210401"
        arrTime:
          description: This is the arrival time in `HH:mm` format.
          type: string
          pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
          example: "17:50"
        arrAirport:
          description: This is the arrival airport specified using its IATA code.
          type: string
          minLength: 3
          maxLength: 3
          example: CGN
        flightNo:
          description: This is the flight number starting with carrier IATA code.
          type: string
          example: AC103
        carrier:
          description: This is the 2-letter IATA carrier code
          type: string
          minLength: 2
          maxLength: 2
          example: AC

    FareClass:
      description: This is the fare class, which is one of `Economy`, `PremiumEconomy`, `Business`, `First` and `All`, where `All` means query for all fare classes.
      type: string
      default: Economy
      enum:
        - Economy
        - PremiumEconomy
        - Business
        - First
        - All