openapi: 3.0.3
info:
  title: Flight Order API
  version: 2.1.0
  description: |
    (TODO)
  contact:
    name: newpathfly
servers:
  - url: http://uat-api.newpathfly.com/v1/order
  - url: http://api.newpathfly.com/v1/order
tags:
  - name: Order
paths:
  /orders:
    post:
      description: |
        (TODO)
      operationId: createOrder
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          $ref: "#/components/responses/Order"
        "400":
          description: Bad Request
          content:
            text/plain:
              example: "Bad order request: (specific error message here)"
  /orders/{orderId}:
    get:
      description: |
        (TODO)
      operationId: getOrder
      tags:
        - Order
      parameters:
        - $ref: "#/components/parameters/OrderId"
      responses:
        "200":
          $ref: "#/components/responses/Order"
components:
  parameters:
    OrderId:
      name: orderId
      in: path
      required: true
      schema:
        type: string
        readOnly: true
        description: |
          (TODO)
        example: a7dd1cf6-dc96-490b-bdf6-8685dbf5bb87
  responses:
    Order:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Order"
  schemas:
    Order:
      description: |
        (TODO)
      required:
        - tripKey
        - customer
        - passengers
      properties:
        orderId:
          type: string
          readOnly: true
          description: |
            (TODO)
          example: a7dd1cf6-dc96-490b-bdf6-8685dbf5bb87
        tripKey:
          type: string
          example: (TODO)
        customer:
          $ref: "#/components/schemas/Customer"
        passengers:
          type: array
          items:
            $ref: "#/components/schemas/Passenger"
    Customer:
      allOf:
        - $ref: "#/components/schemas/Person"
        - properties:
            phoneCountryCode:
              type: string
              example: "+1"
            phoneNumber:
              type: string
              example: "1234567890"
            email:
              type: string
              example: "peter_parker@yahoo.com"
    Passenger:
      allOf:
        - $ref: "#/components/schemas/Person"
        - properties:
            type:
              type: string
              enum:
                - ADT
                - CHD
                - INF
            birthday:
              type: string
              format: date
              example: "2001-01-01"
            gender:
              type: string
              enum:
                - M
                - F
            travelDocument:
              $ref: "#/components/schemas/TravelDocument"
    Person:
      description: |
        (TODO)
      properties:
        firstName:
          type: string
          example: Peter
        lastName:
          type: string
          example: Parker
    TravelDocument:
      description: |
        (TODO)
      properties:
        type:
          description: |
            (TODO)
          type: string
          default: PASSPORT
          enum:
            - DRIVER_LICENSE
            - NATIONAL_ID
            - PASSPORT
        number:
          type: string
          description: |
            (TODO)
          example: EG12345678
        expiryDate:
          type: string
          format: date
        placeOfIssue:
          type: string
          example: USA
